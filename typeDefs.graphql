type FilmProperties {
    characters: [String]
    planets: [String]
    starships: [String]
    vehicles: [String]
    species: [String]
    created: String
    edited: String
    producer: String
    title: String
    episode_id: Int
    director: String
    release_date: String
    opening_crawl: String
    url: String
}
type CrawlWordsCount {
    word: String
    count: Int
}

type Film {
    properties: FilmProperties
    description: String
    _id: String
    uid: String
    crawl_words_count: [CrawlWordsCount]
    crawl_popular_persons_count: [String]
}

type SmallResponse {
    uid: String
    name: String
    url: String
}

type PeopleProperties {
    height: String
    mass: String
    hair_color: String
    skin_color: String
    eye_color: String
    birth_year: String
    gender: String
    created: String
    edited: String
    name: String
    homeworld: String
    url: String
}

type People {
    description: String
    _id: String
    uid: String
    properties: PeopleProperties
}

type PlanetProperties {
    diameter: String
    rotation_period: String
    orbital_period: String
    gravity: String
    population: String
    climate: String
    terrain: String
    surface_water: String
    created: String
    edited: String
    name: String
    url: String
}

type Planet {
    description: String
    _id: String
    uid: String
    properties: PeopleProperties
}

type SpecieProperties {
    classification: String
    designation: String
    average_height: String
    average_lifespan: String
    hair_colors: String
    skin_colors: String
    eye_colors: String
    homeworld: String
    language: String
    created: String
    edited: String
    name: String
    url: String
    people: [String]
}

type Specie {
    description: String
    _id: String
    uid: String
    properties: SpecieProperties
}

type VehicleProperties {
    model: String
    vehicle_class: String
    manufacturer: String
    cost_in_credits: String
    length: String
    crew: String
    passengers: String
    max_atmosphering_speed: String
    cargo_capacity: String
    consumables: String
    created: String
    edited: String
    name: String
    url: String
    pilots: [String]
    films: [String]
}
type Vehicle {
    description: String
    _id: String
    uid: String
    properties: VehicleProperties
}

type StarshipProperties {
    model: String
    starship_class: String
    manufacturer: String
    cost_in_credits: String
    length: String
    crew: String
    passengers: String
    max_atmosphering_speed: String
    hyperdrive_rating: String
    MGLT: String
    cargo_capacity: String
    consumables: String
    created: String
    edited: String
    name: String
    url: String
    pilots: [String]
}
type Starship {
    description: String
    _id: String
    uid: String
    properties: StarshipProperties
}

type Query {
    allFilms(limit: Int, page: Int, title: String): [Film]
    film(id: Int!): Film
    allPeoples(limit: Int, page: Int): [SmallResponse]
    allPeoplesFiltered(limit: Int, page: Int, name: String!): [People]
    people(id: Int!): People
    allPlanets(limit: Int, page: Int): [SmallResponse]
    allPlanetsFiltered(limit: Int, page: Int, name: String!): [Planet]
    planet(id: Int!): Planet
    allSpecies(limit: Int, page: Int): [SmallResponse]
    allSpeciesFiltered(limit: Int, page: Int, name: String!): [Specie]
    specie(id: Int!): Specie
    allVehicles(limit: Int, page: Int): [SmallResponse]
    allVehiclesFiltered(limit: Int, page: Int, name: String, model: String): [Vehicle]
    vehicle(id: Int!): Vehicle
    allStarships(limit: Int, page: Int): [SmallResponse]
    allStarshipsFiltered(limit: Int, page: Int, name: String, model: String): [Starship]
    starship(id: Int!): Starship
}